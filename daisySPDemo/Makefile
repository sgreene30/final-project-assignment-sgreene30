DAISYSP_SOURCE_DIR = lib/daisy/Source

CONTROL_MOD_DIR = Control
CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(CONTROL_MOD_DIR)/adenv.cpp
CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(CONTROL_MOD_DIR)/adsr.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(CONTROL_MOD_DIR)/line.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(CONTROL_MOD_DIR)/phasor.cpp

#DRUM_MOD_DIR = Drums
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(DRUM_MOD_DIR)/analogbassdrum.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(DRUM_MOD_DIR)/analogsnaredrum.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(DRUM_MOD_DIR)/hihat.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(DRUM_MOD_DIR)/synthbassdrum.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(DRUM_MOD_DIR)/synthsnaredrum.cpp

#DYNAMICS_MOD_DIR = Dynamics
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(DYNAMICS_MOD_DIR)/balance.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(DYNAMICS_MOD_DIR)/compressor.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(DYNAMICS_MOD_DIR)/crossfade.cpp 
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(DYNAMICS_MOD_DIR)/limiter.cpp 

#EFFECTS_MOD_DIR = Effects
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(EFFECTS_MOD_DIR)/autowah.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(EFFECTS_MOD_DIR)/bitcrush.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(EFFECTS_MOD_DIR)/chorus.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(EFFECTS_MOD_DIR)/decimator.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(EFFECTS_MOD_DIR)/flanger.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(EFFECTS_MOD_DIR)/fold.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(EFFECTS_MOD_DIR)/overdrive.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(EFFECTS_MOD_DIR)/phaser.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(EFFECTS_MOD_DIR)/reverbsc.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(EFFECTS_MOD_DIR)/sampleratereducer.cpp 
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(EFFECTS_MOD_DIR)/tremolo.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(EFFECTS_MOD_DIR)/wavefolder.cpp

#FILTER_MOD_DIR = Filters
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(FILTER_MOD_DIR)/allpass.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(FILTER_MOD_DIR)/atone.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(FILTER_MOD_DIR)/biquad.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(FILTER_MOD_DIR)/comb.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(FILTER_MOD_DIR)/mode.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(FILTER_MOD_DIR)/moogladder.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(FILTER_MOD_DIR)/nlfilt.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(FILTER_MOD_DIR)/svf.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(FILTER_MOD_DIR)/tone.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(FILTER_MOD_DIR)/soap.cpp

#NOISE_MOD_DIR = Noise
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(NOISE_MOD_DIR)/clockednoise.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(NOISE_MOD_DIR)/grainlet.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(NOISE_MOD_DIR)/particle.cpp 

#PHYSICAL_MODELING_MOD_DIR = PhysicalModeling
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(PHYSICAL_MODELING_MOD_DIR)/drip.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(PHYSICAL_MODELING_MOD_DIR)/modalvoice.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(PHYSICAL_MODELING_MOD_DIR)/pluck.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(PHYSICAL_MODELING_MOD_DIR)/KarplusString.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(PHYSICAL_MODELING_MOD_DIR)/resonator.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(PHYSICAL_MODELING_MOD_DIR)/stringvoice.cpp 
#PolyPluck 

SYNTHESIS_MOD_DIR = Synthesis
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(SYNTHESIS_MOD_DIR)/blosc.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(SYNTHESIS_MOD_DIR)/fm2.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(SYNTHESIS_MOD_DIR)/formantosc.cpp
CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(SYNTHESIS_MOD_DIR)/oscillator.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(SYNTHESIS_MOD_DIR)/oscillatorbank.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(SYNTHESIS_MOD_DIR)/variablesawosc.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(SYNTHESIS_MOD_DIR)/variableshapeosc.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(SYNTHESIS_MOD_DIR)/vosim.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(SYNTHESIS_MOD_DIR)/zoscillator.cpp 
#harmonic_osc 

UTILITY_MOD_DIR = Utility
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(UTILITY_MOD_DIR)/dcblock.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(UTILITY_MOD_DIR)/jitter.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(UTILITY_MOD_DIR)/metro.cpp
#CPP_SOURCES += $(DAISYSP_SOURCE_DIR)/$(UTILITY_MOD_DIR)/port.cpp
#delayline 
#dsp 
#looper
#maytrig 
#samplehold 
#smooth_random


EXEC = drum
CXX ?= g++

CLIB = -I./lib/portaudio/include ./lib/portaudio/lib/.libs/libportaudio.a -lrt -lasound -ljack -pthread -I./lib/daisy/Source -I./lib/daisy/Source/Utility/

$(EXEC): drum.cpp 
	/home/sgreene30/final_project_aesd/buildroot/output/host/bin/arm-buildroot-linux-uclibcgnueabihf-g++ -o $@ $^ $(CPP_SOURCES) $(CLIB) 

hello: hello_world.cpp
	$(CXX) -o $@ $^

install-deps:
	
	mkdir -p lib

	curl https://files.portaudio.com/archives/pa_stable_v190700_20210406.tgz | tar -zx -C lib
	cd lib/portaudio && ./configure && $(MAKE) -j
.PHONY: install-deps